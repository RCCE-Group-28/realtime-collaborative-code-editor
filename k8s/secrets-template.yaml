# This is a template file. DO NOT commit actual secrets to git.
# Use kubectl to create these secrets in your cluster.
#
# Example commands:
# kubectl create secret generic database-config \
#   --from-literal=mongo-uri=YOUR_MONGO_URI
#
# kubectl create secret generic jwt-config \
#   --from-literal=secret=YOUR_JWT_SECRET
#
# kubectl create secret generic smtp-config \
#   --from-literal=host=YOUR_SMTP_HOST \
#   --from-literal=port=YOUR_SMTP_PORT \
#   --from-literal=user=YOUR_SMTP_USER \
#   --from-literal=pass=YOUR_SMTP_PASS \
#   --from-literal=sender-email=YOUR_SENDER_EMAIL
#
# kubectl create secret generic gemini-config \
#   --from-literal=api-key=YOUR_GEMINI_API_KEY \
#   --from-literal=model-name=gemini-2.0-flash
#
# kubectl create secret generic github-oauth \
#   --from-literal=client-id=YOUR_GITHUB_CLIENT_ID \
#   --from-literal=client-secret=YOUR_GITHUB_CLIENT_SECRET

---
apiVersion: v1
kind: Secret
metadata:
  name: database-config
type: Opaque
data:
  mongo-uri: BASE64_ENCODED_VALUE
---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-config
type: Opaque
data:
  secret: BASE64_ENCODED_VALUE
---
apiVersion: v1
kind: Secret
metadata:
  name: smtp-config
type: Opaque
data:
  host: BASE64_ENCODED_VALUE
  port: BASE64_ENCODED_VALUE
  user: BASE64_ENCODED_VALUE
  pass: BASE64_ENCODED_VALUE
  sender-email: BASE64_ENCODED_VALUE
---
apiVersion: v1
kind: Secret
metadata:
  name: gemini-config
type: Opaque
data:
  api-key: BASE64_ENCODED_VALUE
  model-name: BASE64_ENCODED_VALUE
---
apiVersion: v1
kind: Secret
metadata:
  name: github-oauth
type: Opaque
data:
  client-id: BASE64_ENCODED_VALUE
  client-secret: BASE64_ENCODED_VALUE
