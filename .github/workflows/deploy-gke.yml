name: Deploy to GKE

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}

jobs:
  build-and-deploy:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE

    - name: Build and push Next.js app
      run: |
        docker build \
          --build-arg NEXT_PUBLIC_FIREBASE_API_KEY=${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }} \
          --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }} \
          --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }} \
          --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }} \
          --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }} \
          --build-arg NEXT_PUBLIC_FIREBASE_APP_ID=${{ vars.NEXT_PUBLIC_FIREBASE_APP_ID }} \
          --build-arg NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ vars.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }} \
          --build-arg NEXT_PUBLIC_GITHUB_CLIENT_ID=${{ vars.NEXT_PUBLIC_GITHUB_CLIENT_ID }} \
          --build-arg NEXT_PUBLIC_APP_URL=${{ vars.NEXT_PUBLIC_APP_URL }} \
          --build-arg NEXT_PUBLIC_SOCKETIO_SERVER_URL=${{ vars.NEXT_PUBLIC_SOCKETIO_SERVER_URL }} \
          --build-arg NEXT_PUBLIC_YJS_SERVER_URL=${{ vars.NEXT_PUBLIC_YJS_SERVER_URL }} \
          -t gcr.io/$GCP_PROJECT_ID/nextjs-app:${{ github.sha }} \
          -t gcr.io/$GCP_PROJECT_ID/nextjs-app:latest \
          -f apps/nextjs-app/Dockerfile .
        docker push gcr.io/$GCP_PROJECT_ID/nextjs-app:${{ github.sha }}
        docker push gcr.io/$GCP_PROJECT_ID/nextjs-app:latest

    - name: Build and push Socket.io server
      run: |
        docker build \
          -t gcr.io/$GCP_PROJECT_ID/socketio-server:${{ github.sha }} \
          -t gcr.io/$GCP_PROJECT_ID/socketio-server:latest \
          -f apps/socketio-server/Dockerfile .
        docker push gcr.io/$GCP_PROJECT_ID/socketio-server:${{ github.sha }}
        docker push gcr.io/$GCP_PROJECT_ID/socketio-server:latest

    - name: Build and push Y.js server
      run: |
        docker build \
          -t gcr.io/$GCP_PROJECT_ID/yjs-server:${{ github.sha }} \
          -t gcr.io/$GCP_PROJECT_ID/yjs-server:latest \
          -f apps/yjs-server/Dockerfile .
        docker push gcr.io/$GCP_PROJECT_ID/yjs-server:${{ github.sha }}
        docker push gcr.io/$GCP_PROJECT_ID/yjs-server:latest

    - name: Update Kubernetes manifests with PROJECT_ID
      run: |
        sed -i "s/GCP_PROJECT_ID/$GCP_PROJECT_ID/g" k8s/*.yaml

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/nextjs-app-deployment.yaml
        kubectl apply -f k8s/socketio-server-deployment.yaml
        kubectl apply -f k8s/yjs-server-deployment.yaml
        kubectl apply -f k8s/ingress.yaml

    - name: Wait for rollout to complete
      run: |
        kubectl rollout status deployment/nextjs-app --timeout=5m
        kubectl rollout status deployment/socketio-server --timeout=5m
        kubectl rollout status deployment/yjs-server --timeout=5m

    - name: Get deployment status
      run: |
        kubectl get services
        kubectl get pods
        kubectl get ingress
